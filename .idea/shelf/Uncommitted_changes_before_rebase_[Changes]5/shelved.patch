Index: server/routes/search.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/routes/search.js b/server/routes/search.js
--- a/server/routes/search.js	
+++ b/server/routes/search.js	
@@ -4,60 +4,76 @@
 const express = require('express');
 const router = express.Router();
 
-router.get('/:key', async (req, res) => {
+router.get('/composer', async (req, res) => {
 
-    const reg = new RegExp(req.params.key, "i");
-    let result = await Composer.find(
-        {
-            "$or": [
-                { name: { $regex: reg } },
-                { nationality: { $regex: reg } }
-            ]
-        }
-    );
+    const reg1 = new RegExp(req.query.key, "i");
+    const reg2 = new RegExp(req.query.nationality, "i");
+    let result = "";
 
-    result = result.concat(await Piece.find(
-        {
-            "$or": [
-                { name: { $regex: reg } },
-                { instruments: { $regex: reg } }
-            ]
-        }
-    ));
-//testing2
+    if (!req.query.nationality) {
+        result = await Composer.find(
+            {
+                "$or": [
+                    { name: { $regex: reg1 } },
+                    { nationality: { $regex: reg1 } }
+                ]
+            }
+        );
+    } else {
+        result = await Composer.find(
+            {
+                "$and": [
+                    { name: { $regex: reg1 } },
+                    { nationality: { $regex: reg2 } }
+                ]
+            }
+        );
+    }
+
     res.send(result);
 });
 
-router.get('/composer/:key', async (req, res) => {
+
+router.get('/piece', async (req, res) => {
 
-    const reg = new RegExp(req.params.key, "i");
-    let result = await Composer.find(
-        {
-            "$or": [
-                { name: { $regex: reg } },
-                { nationality: { $regex: reg } }
-            ]
-        }
-    );
-
-    res.send(result);
-});
-
-router.get('/piece/:key', async (req, res) => {
-
-    const reg = new RegExp(req.params.key, "i");
-
-    let result = await Piece.find(
-        {
-            "$or": [
-                { name: { $regex: reg } },
-                { year: { $regex: reg } },
-                { instruments: { $regex: reg } }
-            ]
-        }
-    );
+    const reg1 = new RegExp(req.query.key, "i");
+    const reg2 = new RegExp(req.query.instrument, "i");
+    const reg3 = new RegExp(req.query.publisher, "i");
+    let result = "";
+
+    if (!req.query.instrument && !req.query.publisher) {
+        result = await Piece.find(
+            {
+                "$or": [
+                    { name: { $regex: reg1 } },
+                    { instruments: { $regex: reg1 } },
+                    { publisher: { $regex: reg1 } },
+                    //{ composer:{ _id: {$regex:reg1}}},
+                ]
+            }
+        );
+    } else if (!req.query.instrument) {
+        result = await Piece.find(
+            {
+                "$and": [
+                    { name: { $regex: reg1 } },
+                    { publisher: { $regex: reg3 } },
+                ]
+            }
+        );
+    } else {
+        result = await Piece.find(
+            {
+                "$and": [
+                    { name: { $regex: reg1 } },
+                    { instruments: { $regex: reg2 } },
+                ]
+            }
+        );
+    }
 
     res.send(result);
 });
 
+
 module.exports = router; 
\ No newline at end of file
